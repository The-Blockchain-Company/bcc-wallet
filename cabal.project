--------------------------------------------------------------------------------
-- Cabal project file
-- -----------------------------------------------------------------------------
--
-- Example build command:
--
--   cabal build all --enable-tests --enable-benchmarks -O0
--
-- -----------------------------------------------------------------------------
-- Updating this file
--
-- Note that the canonical source of dependencies is stack.yaml and
-- cabal.project should be kept in sync with that. The Nix packages
-- are generated from stack.yaml not cabal.project.
--
-- -----------------------------------------------------------------------------
-- How to use with the nix-shell
--
-- The advantage of building under nix-shell is that the correct
-- versions of all build and test dependencies are set up for you in the
-- nix-shell environment.
--
-- All dependencies, including Haskell package dependencies, have been
-- built on Hydra and are transparently downloaded from the TBCO
-- cache.
--
-- The Haskell package set in shell.nix is automatically generated
-- from stack.yaml.
--
-- To build, start "nix-shell", then run Cabal inside:
--     nix-shell
--     cabal build all -O0
--
-- To build with profiling enabled, use:
--    nix-shell --arg profiling true
--    cabal configure --enable-tests --enable-benchmarks --enable-profiling
--    cabal build all
--
--------------------------------------------------------------------------------

index-state: 2022-04-05T00:00:00Z
with-compiler: ghc-8.10.5

packages:
    lib/core/
  , lib/core-integration/
  , lib/cli/
  , lib/launcher/
  , lib/numeric/
  , lib/text-class/
  , lib/test-utils/
  , lib/sophie/
  , lib/strict-non-empty-containers/

-- Using a fork until our patches can be merged upstream
source-repository-package
  type: git
  location: https://github.com/input-output-hk/optparse-applicative
  tag: 7497a29cb998721a9068d5725d49461f2bba0e7a
  --sha256: 1gvsrg925vynwgqwplgjmp53vj953qyh3wbdf34pw21c8r47w35r

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/Win32-network
    tag: dcb15be32844f03cebf4127859942b8440ace522

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/bcc-addresses
    tag: 6a4950494e0354c774431705fd7f6b0a14c4559b
    subdir: command-line
            core

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/bcc-base
    tag: 73f49024008e2d9564974ea4d039e2c0726a6ce8
    subdir:
            base-deriving-via
            binary
            binary/test
            bcc-crypto-class
            bcc-crypto-optimum
            bcc-crypto-tests
            orphans-deriving-via
            measures
            strict-containers
            slotting

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/bcc-crypto
    tag: ce2f7994556490b169914f8d818fb9ef6149211f

source-repository-package
  type: git
  location: https://github.com/The-Blockchain-Company/zerepoch
  tag: c8cf4619e6e496930c9092cf6d64493eff300177
  subdir:
    zerepoch-core
    zerepoch-ledger
    zerepoch-ledger-api
    zerepoch-tx
    zerepoch-tx-plugin
    prettyprinter-configurable
    stubs/zerepoch-ghc-stub
    word-array

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/bcc-ledger-specs
    tag: e1109f35aee321bbf899a5e2cc4de3eec583f9b7
    subdir: aurum/impl
            cole/chain/executable-spec
            cole/crypto
            cole/crypto/test
            cole/ledger/executable-spec
            cole/ledger/impl
            cole/ledger/impl/test
            bcc-ledger-core
            bcc-protocol-toptimum
            semantics/executable-spec
            semantics/small-steps-test
            sophie/chain-and-ledger/dependencies/non-integer
            sophie/chain-and-ledger/executable-spec
            sophie/chain-and-ledger/sophie-spec-ledger-test
            sophie-ma/impl
            sophie-ma/sophie-ma-test

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/bcc-node
    tag: e178cf9a3f3dc7341cb6cd056bb71de3effe0ecc
    subdir: bcc-api
            bcc-cli
            bcc-config
            bcc-node
            bcc-node-chairman

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/bcc-prelude
    tag: 9aa92040d1510162610b1082ae8b69d43be7a84f
    subdir: bcc-prelude
            bcc-prelude-test

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/bcc-sl-x509
    tag: 671dadd666a8de7a40d1a979347578b01a99f723

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/shepards
    tag: 768e0f4462c3a92959c1b8508e45f6b081184122

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/tbco-monitoring-framework
    tag: 04b3cbe2069a84161bc47fb8e0489bb350e92a8a
    subdir: contra-tracer
            tbco-monitoring
            plugins/backend-aggregation
            plugins/backend-ekg
            plugins/backend-monitoring
            plugins/backend-trace-forwarder
            tracer-transformers

source-repository-package
    type: git
    location: https://github.com/The-Blockchain-Company/shardagnostic-network
    tag: 556083a6d5e0fb94c912b561a5f1f7afd1113dc0
    subdir:
      io-sim
      io-classes
      monoidal-synchronisation
      network-mux
      shardagnostic-consensus
      shardagnostic-consensus-cole
      shardagnostic-consensus-bcc
      shardagnostic-consensus-sophie
      shardagnostic-network
      shardagnostic-network-framework
      shardagnostic-network-testing
      typed-protocols
      typed-protocols-examples
      ntp-client

source-repository-package
    type: git
    location: https://github.com/snoyberg/http-client.git
    tag: 1a75bdfca014723dd5d40760fad854b3f0f37156
    subdir: http-client

-- Drops an instance breaking bcc-node.
source-repository-package
    type: git
    location: https://github.com/michaelpj/flat.git
    tag: ee59880f47ab835dbd73bea0847dab7869fc20d8
    --sha256: 1lrzknw765pz2j97nvv9ip3l1mcpf2zr4n56hwlz0rk7wq7ls4cm

-- -------------------------------------------------------------------------
-- Constraints tweaking

-- bcc-addresses unit tests bring in some version constraint conflicts.
--
-- 1. hjsonschema and hjsonpointer deps have overly strict bounds.
-- 2. it has strict aeson < 1.5 dep - this will be fixed in the next release.
allow-newer:
    hjsonschema:*
  , hjsonpointer:*
  , bcc-sl-x509:ip
  , bcc-addresses:aeson
  , size-based:template-haskell

constraints:
    hedgehog >= 1.0.2
  -- dependency of systemd-2.3.0
  , network >= 3.1.1.1
  -- choose versions that work with base >= 4.12
  , hjsonpointer >= 1.5.0
  , hjsonschema >= 1.10.0

-- ----------------------------------------------------------------
-- Flags for dependencies

package bcc-config
  flags: -systemd
package bcc-node
  flags: -systemd

-- -------------------------------------------------------------------------
-- Enable specific tests in this repo

test-show-details: direct

package bcc-wallet
  tests: True
  ghc-options: -fwrite-ide-info

package bcc-wallet-core
  tests: True
  ghc-options: -fwrite-ide-info

package bcc-wallet-cli
  tests: True
  ghc-options: -fwrite-ide-info

package bcc-wallet-launcher
  tests: True
  ghc-options: -fwrite-ide-info

package bcc-wallet-text-class
  tests: True
  ghc-options: -fwrite-ide-info

package bcc-numeric
  tests: True
  ghc-options: -fwrite-ide-info

package bcc-wallet-core-integration
  tests: True
  ghc-options: -fwrite-ide-info

package bcc-wallet-test-utils
  tests: True
  ghc-options: -fwrite-ide-info

package strict-non-empty-containers
  tests: True
  ghc-options: -fwrite-ide-info

-- Now disable all other tests with a global flag.
-- This is what they do in bcc-node/cabal.project.

tests: False

-- -------------------------------------------------------------------------
